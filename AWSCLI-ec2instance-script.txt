
#create security group from aws cli

aws ec2 create-security-group --group-name my-sg --description "test"

#should come back with "GroupId": "sg-xxxxxxxxxxxx"



#create ingress and egress firewall(sg) rules

aws ec2 authorize-security-group-ingress --group-id sg-xxxxx --protocol tcp --port 80 --cidr 0.0.0.0/0

#fill in sg, protocol, port#, cidr



#create ec2 instance from cli
aws ec2 run-instances --image-id <value> --instance-type <value> --security-group-ids <value> --subnet-id <value> --key-name <value> --user-data <value>

#aws ec2 run-instances --image-id ami-094125af156557ca2 --instance-type t2.micro --security-group-ids sg-06de6469226218515 --subnet-id subnet-06b3e133ee7522da6 --key-name Mypublickeys --user-data file://user-data-subnet-id.txt



#terminate instances
aws ec2 terminate-instances --instance-ids <value>


## create auto scaling group

aws autoscaling create-auto-scaling-group --auto-scaling-group-name ASG2 --launch-template "LaunchTemplateName=myec2app" --min-size 1 --max-size 3 --desired-capacity 2 
--availability-zones "us-west-2a" "us-west-2b" --vpc-zone-identifier "subnet-0358fed95c25ce4c0, subnet-0d1c165e5f95da8dc"


## create load balancer, create listener, and attach to TG1 to ASG2

aws elbv2 create-load-balancer --name ALB2 --subnets subnet-0358fed95c25ce4c0 subnet-0d1c165e5f95da8dc --security-groups sg-0a19785b59031c7d6


aws elbv2 create-listener --load-balancer-arn arn:aws:elasticloadbalancing:us-west-2:026023833752:loadbalancer/app/ALB2/c6e290a60ab53a8d 
--protocol HTTP --port 80 --default-actions Type=forward,TargetGroupArn=arn:aws:elasticloadbalancing:us-west-2:026023833752:targetgroup/TG1/0f7fa646bee4f961


aws autoscaling attach-load-balancer-target-groups --auto-scaling-group-name ASG2 --target-group-arns arn:aws:elasticloadbalancing:us-west-2:026023833752:targetgroup/TG1/0f7fa646bee4f961



## delete ASG2 and ALB2

aws elbv2 delete-load-balancer --load-balancer-arn arn:aws:elasticloadbalancing:us-west-2:026023833752:loadbalancer/app/ALB2/c6e290a60ab53a8d

aws autoscaling delete-auto-scaling-group --auto-scaling-group-name ASG2 --force-delete


#generate S3 presigned URLs

aws s3 presign s3://<bucketname>/<filename.jpg> *file needs to be uploaded to bucket first*

